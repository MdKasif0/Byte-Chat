rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Helper function to check if the user is a member of a chat
    function isChatMember(chatId) {
      return isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
    }

    // Helper function to check if the user is an admin of a chat
    function isAdmin(chatId) {
      return isChatMember(chatId) && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.admins;
    }
    
    // Users can read their own profile, and other users' public profiles
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }
    
    // Phone numbers can be created during signup and updated by the owner
    match /phonenumbers/{phoneNumber} {
        allow read: if isSignedIn();
        allow create, delete: if isSignedIn(); // Simplified for now, should be more secure in prod
    }

    // Chats can be read by their members
    match /chats/{chatId} {
      allow read: if isChatMember(chatId);
      allow create: if isSignedIn();
      allow update: if isChatMember(chatId);
    }

    // Messages can be created and read by chat members.
    // Only the sender can edit or delete their own messages.
    match /chats/{chatId}/messages/{messageId} {
      allow read, create: if isChatMember(chatId);
      allow update, delete: if isChatMember(chatId) && resource.data.senderId == request.auth.uid;
    }

    // Feedback can be created by any authenticated user
    match /feedback/{feedbackId} {
      allow create: if isSignedIn();
      // Only admins should be able to read feedback
      allow read, update, delete: if false; 
    }

    // Call signaling documents
    match /calls/{callId} {
      allow read, create: if isSignedIn();
      allow update: if isSignedIn() && (request.auth.uid == resource.data.callerId || request.auth.uid == resource.data.calleeId);
      
      // ICE candidates
      match /{collection}/{candidateId} {
        allow read, create: if isSignedIn() && (request.auth.uid == get(/databases/$(database)/documents/calls/$(callId)).data.callerId || request.auth.uid == get(/databases/$(database)/documents/calls/$(callId)).data.calleeId);
      }
    }
  }
}